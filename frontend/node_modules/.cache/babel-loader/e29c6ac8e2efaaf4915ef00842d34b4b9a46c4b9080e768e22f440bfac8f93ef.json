{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jabra\\\\OneDrive\\\\Desktop\\\\moodsync\\\\frontend\\\\src\\\\components\\\\dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./dashboard.css\";\n\n/**\r\n * Map many possible user words to our 4 moods.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction mapInputToMood(text) {\n  const t = (text || \"\").toLowerCase().trim();\n  const buckets = {\n    happy: [\"happy\", \"joy\", \"joyful\", \"glad\", \"excited\", \"awesome\", \"great\", \"good\", \"energetic\", \"cheerful\", \"delighted\", \"positive\", \"optimistic\", \"smile\", \"grateful\"],\n    sad: [\"sad\", \"down\", \"depressed\", \"upset\", \"unhappy\", \"low\", \"cry\", \"alone\", \"heartbroken\", \"tearful\", \"hopeless\", \"gloomy\", \"miserable\", \"blue\", \"lost\"],\n    angry: [\"angry\", \"mad\", \"furious\", \"frustrated\", \"annoyed\", \"irritated\", \"rage\", \"hate\", \"upset\", \"bitter\", \"resentful\", \"hostile\", \"agitated\"],\n    relaxed: [\"relaxed\", \"calm\", \"peaceful\", \"chill\", \"comfortable\", \"serene\", \"relief\", \"easy\", \"free\", \"mellow\", \"rested\", \"soothing\", \"balanced\", \"tranquil\"]\n  };\n  for (const mood in buckets) {\n    if (buckets[mood].some(word => t.includes(word))) return mood;\n  }\n  // default to stressed â†’ calm music helps most often\n  return \"stressed\";\n}\n\n/**\r\n * Our data: emoji, quotes, and curated song links for each mood & language.\r\n * (Links open in a new tab)\r\n */\n// Mood data with emoji, quotes, and music links\nconst MOOD_DATA = {\n  happy: {\n    emoji: \"ðŸ˜Š\",\n    quotes: [\"Keep smiling, the world is brighter with you.\", \"Happiness is contagiousâ€”spread it around!\", \"Joy is the simplest form of gratitude.\"],\n    songs: {\n      bollywood: [{\n        title: \"Gallan Goodiyan â€“ Dil Dhadakne Do\",\n        url: \"https://www.youtube.com/watch?v=jCEdTq3j-0U\"\n      }, {\n        title: \"London Thumakda â€“ Queen\",\n        url: \"https://www.youtube.com/watch?v=udra3Mfw2oo\"\n      }, {\n        title: \"Badtameez Dil â€“ YJHD\",\n        url: \"https://www.youtube.com/watch?v=II2EO3Nw4m0\"\n      }, {\n        title: \"Abhi Toh Party Shuru Hui Hai â€“ Khoobsurat\",\n        url: \"https://www.youtube.com/watch?v=8LZgzAZ2lpQ\"\n      }, {\n        title: \"Kar Gayi Chull â€“ Kapoor & Sons\",\n        url: \"https://www.youtube.com/watch?v=NTHz9ephYTw\"\n      }],\n      english: [{\n        title: \"Happy â€“ Pharrell Williams\",\n        url: \"https://www.youtube.com/watch?v=ZbZSe6N_BXs\"\n      }, {\n        title: \"Canâ€™t Stop the Feeling â€“ Justin Timberlake\",\n        url: \"https://www.youtube.com/watch?v=ru0K8uYEZWw\"\n      }, {\n        title: \"Uptown Funk â€“ Bruno Mars\",\n        url: \"https://www.youtube.com/watch?v=OPf0YbXqDm0\"\n      }, {\n        title: \"Shake It Off â€“ Taylor Swift\",\n        url: \"https://www.youtube.com/watch?v=nfWlot6h_JM\"\n      }, {\n        title: \"Good Time â€“ Owl City & Carly Rae Jepsen\",\n        url: \"https://www.youtube.com/watch?v=H7HmzwI67ec\"\n      }]\n    }\n  },\n  sad: {\n    emoji: \"ðŸ˜¢\",\n    quotes: [\"Low today, glow tomorrow.\", \"Storms donâ€™t last forever.\", \"One song, one step at a time.\"],\n    // For 'sad' we give UPLIFT songs to cheer up\n    songs: {\n      bollywood: [{\n        title: \"Zinda â€“ Bhaag Milkha Bhaag\",\n        url: \"https://www.youtube.com/watch?v=Ax0G_P2dSBw\"\n      }, {\n        title: \"Ilahi â€“ YJHD\",\n        url: \"https://www.youtube.com/watch?v=fdubeMFwuGs\"\n      }, {\n        title: \"Dil Dhadakne Do â€“ ZNMD\",\n        url: \"https://www.youtube.com/watch?v=WuMWwPHTSoY\"\n      }, {\n        title: \"Zindagi Do Pal Ki â€“ Kites\",\n        url: \"https://www.youtube.com/watch?v=4DbVdym2M90\"\n      }, {\n        title: \"Love You Zindagi â€“ Dear Zindagi\",\n        url: \"https://www.youtube.com/watch?v=bw7bVpI5VcM\"\n      }],\n      english: [{\n        title: \"Shake It Off â€“ Taylor Swift\",\n        url: \"https://www.youtube.com/watch?v=nfWlot6h_JM\"\n      }, {\n        title: \"Good as Hell â€“ Lizzo\",\n        url: \"https://www.youtube.com/watch?v=vuq-VAiW9kA\"\n      }, {\n        title: \"Stronger â€“ Kelly Clarkson\",\n        url: \"https://www.youtube.com/watch?v=Xn676-fLq7I\"\n      }, {\n        title: \"Firework â€“ Katy Perry\",\n        url: \"https://www.youtube.com/watch?v=QGJuMBdaqIw\"\n      }, {\n        title: \"Roar â€“ Katy Perry\",\n        url: \"https://www.youtube.com/watch?v=CevxZvSJLk8\"\n      }]\n    }\n  },\n  angry: {\n    emoji: \"ðŸ˜¡\",\n    quotes: [\"Take a deep breath, peace starts within.\", \"Donâ€™t let anger control you.\", \"Relax, recharge, restart.\"],\n    songs: {\n      bollywood: [{\n        title: \"Sadda Haq â€“ Rockstar\",\n        url: \"https://www.youtube.com/watch?v=p9DQINKZxWE\"\n      }, {\n        title: \"Allah Ke Bande â€“ Kailash Kher\",\n        url: \"https://www.youtube.com/watch?v=KSwd2fYX9vg\"\n      }, {\n        title: \"Mitwa â€“ Kabhi Alvida Naa Kehna\",\n        url: \"https://www.youtube.com/watch?v=ru_5PA8cwkE\"\n      }, {\n        title: \"Yun Hi Chala Chal â€“ Swades\",\n        url: \"https://www.youtube.com/watch?v=eEeX2QMlSlo\"\n      }, {\n        title: \"Dil Se Re â€“ Dil Se\",\n        url: \"https://www.youtube.com/watch?v=U3hZW62-KGA\"\n      }],\n      english: [{\n        title: \"Numb â€“ Linkin Park\",\n        url: \"https://www.youtube.com/watch?v=kXYiU_JCYtU\"\n      }, {\n        title: \"Believer â€“ Imagine Dragons\",\n        url: \"https://www.youtube.com/watch?v=7wtfhZwyrcc\"\n      }, {\n        title: \"Whatever It Takes â€“ Imagine Dragons\",\n        url: \"https://www.youtube.com/watch?v=gOsM-DYAEhY\"\n      }, {\n        title: \"Faint â€“ Linkin Park\",\n        url: \"https://www.youtube.com/watch?v=LYU-8IFcDPw\"\n      }, {\n        title: \"Stronger â€“ Kanye West\",\n        url: \"https://www.youtube.com/watch?v=PsO6ZnUZI0g\"\n      }]\n    }\n  },\n  relaxed: {\n    emoji: \"ðŸ˜Œ\",\n    quotes: [\"Peace begins with a smile.\", \"Relax, refresh, recharge.\", \"Calm mind, happy soul.\"],\n    songs: {\n      bollywood: [{\n        title: \"Kun Faya Kun â€“ Rockstar\",\n        url: \"https://www.youtube.com/watch?v=0RDI9CMilhk\"\n      }, {\n        title: \"Phir Se Ud Chala â€“ Rockstar\",\n        url: \"https://www.youtube.com/watch?v=2mWaqsC3U7k\"\n      }, {\n        title: \"Agar Tum Saath Ho â€“ Tamasha\",\n        url: \"https://www.youtube.com/watch?v=sK7riqg2mr4\"\n      }, {\n        title: \"Sham â€“ Aisha\",\n        url: \"https://www.youtube.com/watch?v=kl8T6tsOZJk\"\n      }, {\n        title: \"Iktara â€“ Wake Up Sid\",\n        url: \"https://www.youtube.com/watch?v=akjdj6iHttY\"\n      }],\n      english: [{\n        title: \"Perfect â€“ Ed Sheeran\",\n        url: \"https://www.youtube.com/watch?v=2Vv-BfVoq4g\"\n      }, {\n        title: \"All of Me â€“ John Legend\",\n        url: \"https://www.youtube.com/watch?v=450p7goxZqg\"\n      }, {\n        title: \"Let Her Go â€“ Passenger\",\n        url: \"https://www.youtube.com/watch?v=RBumgq5yVrA\"\n      }, {\n        title: \"Photograph â€“ Ed Sheeran\",\n        url: \"https://www.youtube.com/watch?v=nSDgHBxUbVQ\"\n      }, {\n        title: \"Stay With Me â€“ Sam Smith\",\n        url: \"https://www.youtube.com/watch?v=pB-5XG-DbAA\"\n      }]\n    }\n  }\n};\nfunction pickRandom(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\nexport default function Dashboard() {\n  _s();\n  const [rawInput, setRawInput] = useState(\"\");\n  const [language, setLanguage] = useState(\"bollywood\");\n  const [activeMood, setActiveMood] = useState(\"\");\n  const [quote, setQuote] = useState(\"\");\n  const quickSet = m => {\n    setRawInput(m);\n    handleRecommend(m, language);\n  };\n  const handleRecommend = (text = rawInput, lang = language) => {\n    const mood = mapInputToMood(text);\n    setActiveMood(mood);\n    setLanguage(lang);\n    setQuote(pickRandom(MOOD_DATA[mood].quotes));\n  };\n  const songsToShow = activeMood ? MOOD_DATA[activeMood].songs[language] : [];\n  const emoji = activeMood ? MOOD_DATA[activeMood].emoji : \"ðŸŽ§\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      src: \"YOUR_MUSIC_URL_HERE.mp3\",\n      autoPlay: true,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"\\uD83C\\uDFB5 MoodSync \\u2014 Playlist by Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chips\",\n        children: [\"happy\", \"sad\", \"angry\", \"relaxed\"].map(m => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chip\",\n          onClick: () => quickSet(m),\n          children: m\n        }, m, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: rawInput,\n          onChange: e => setRawInput(e.target.value),\n          placeholder: \"Type how you feel (e.g., 'I am sad' or 'happy')\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRecommend(),\n          children: \"Get Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: language === \"bollywood\",\n            onChange: () => handleRecommend(rawInput, \"bollywood\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), \"Bollywood\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: language === \"english\",\n            onChange: () => handleRecommend(rawInput, \"english\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), \"English\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), activeMood && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 28\n            },\n            children: emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 700,\n                fontSize: 18,\n                textTransform: \"capitalize\"\n              },\n              children: [\"Mood: \", activeMood]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"#555\"\n              },\n              children: quote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"song-list\",\n          children: songsToShow.map((song, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: song.url,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hint\",\n        children: [\"Tip: type words like \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"happy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 32\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"sad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 46\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"angry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 58\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"relaxed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 72\n        }, this), \" or click the quick chips above.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"sNEEoKpKyQND2XBX6OrtRFBR0tQ=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","mapInputToMood","text","t","toLowerCase","trim","buckets","happy","sad","angry","relaxed","mood","some","word","includes","MOOD_DATA","emoji","quotes","songs","bollywood","title","url","english","pickRandom","arr","Math","floor","random","length","Dashboard","_s","rawInput","setRawInput","language","setLanguage","activeMood","setActiveMood","quote","setQuote","quickSet","m","handleRecommend","lang","songsToShow","className","children","src","autoPlay","loop","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","value","onChange","e","target","placeholder","type","checked","style","fontSize","marginLeft","fontWeight","textTransform","color","song","i","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/jabra/OneDrive/Desktop/moodsync/frontend/src/components/dashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./dashboard.css\";\r\n\r\n\r\n\r\n/**\r\n * Map many possible user words to our 4 moods.\r\n */\r\nfunction mapInputToMood(text) {\r\n  const t = (text || \"\").toLowerCase().trim();\r\n\r\nconst buckets = {\r\n  happy: [\r\n    \"happy\", \"joy\", \"joyful\", \"glad\", \"excited\", \"awesome\",\r\n    \"great\", \"good\", \"energetic\", \"cheerful\", \"delighted\",\r\n    \"positive\", \"optimistic\", \"smile\", \"grateful\"\r\n  ],\r\n  sad: [\r\n    \"sad\", \"down\", \"depressed\", \"upset\", \"unhappy\", \"low\",\r\n    \"cry\", \"alone\", \"heartbroken\", \"tearful\", \"hopeless\",\r\n    \"gloomy\", \"miserable\", \"blue\", \"lost\"\r\n  ],\r\n  angry: [\r\n    \"angry\", \"mad\", \"furious\", \"frustrated\", \"annoyed\",\r\n    \"irritated\", \"rage\", \"hate\", \"upset\", \"bitter\",\r\n    \"resentful\", \"hostile\", \"agitated\"\r\n  ],\r\n  relaxed: [\r\n    \"relaxed\", \"calm\", \"peaceful\", \"chill\", \"comfortable\",\r\n    \"serene\", \"relief\", \"easy\", \"free\", \"mellow\",\r\n    \"rested\", \"soothing\", \"balanced\", \"tranquil\"\r\n  ]\r\n};\r\n\r\n\r\n  for (const mood in buckets) {\r\n    if (buckets[mood].some(word => t.includes(word))) return mood;\r\n  }\r\n  // default to stressed â†’ calm music helps most often\r\n  return \"stressed\";\r\n}\r\n\r\n/**\r\n * Our data: emoji, quotes, and curated song links for each mood & language.\r\n * (Links open in a new tab)\r\n */\r\n// Mood data with emoji, quotes, and music links\r\nconst MOOD_DATA = {\r\n  happy: {\r\n    emoji: \"ðŸ˜Š\",\r\n    quotes: [\r\n      \"Keep smiling, the world is brighter with you.\",\r\n      \"Happiness is contagiousâ€”spread it around!\",\r\n      \"Joy is the simplest form of gratitude.\"\r\n    ],\r\n    songs: {\r\n      bollywood: [\r\n        { title: \"Gallan Goodiyan â€“ Dil Dhadakne Do\", url: \"https://www.youtube.com/watch?v=jCEdTq3j-0U\" },\r\n        { title: \"London Thumakda â€“ Queen\", url: \"https://www.youtube.com/watch?v=udra3Mfw2oo\" },\r\n        { title: \"Badtameez Dil â€“ YJHD\", url: \"https://www.youtube.com/watch?v=II2EO3Nw4m0\" },\r\n        { title: \"Abhi Toh Party Shuru Hui Hai â€“ Khoobsurat\", url: \"https://www.youtube.com/watch?v=8LZgzAZ2lpQ\" },\r\n        { title: \"Kar Gayi Chull â€“ Kapoor & Sons\", url: \"https://www.youtube.com/watch?v=NTHz9ephYTw\" }\r\n      ],\r\n      english: [\r\n        { title: \"Happy â€“ Pharrell Williams\", url: \"https://www.youtube.com/watch?v=ZbZSe6N_BXs\" },\r\n        { title: \"Canâ€™t Stop the Feeling â€“ Justin Timberlake\", url: \"https://www.youtube.com/watch?v=ru0K8uYEZWw\" },\r\n        { title: \"Uptown Funk â€“ Bruno Mars\", url: \"https://www.youtube.com/watch?v=OPf0YbXqDm0\" },\r\n        { title: \"Shake It Off â€“ Taylor Swift\", url: \"https://www.youtube.com/watch?v=nfWlot6h_JM\" },\r\n        { title: \"Good Time â€“ Owl City & Carly Rae Jepsen\", url: \"https://www.youtube.com/watch?v=H7HmzwI67ec\" }\r\n      ]\r\n    }\r\n  },\r\n\r\n  sad: {\r\n    emoji: \"ðŸ˜¢\",\r\n    quotes: [\r\n      \"Low today, glow tomorrow.\",\r\n      \"Storms donâ€™t last forever.\",\r\n      \"One song, one step at a time.\"\r\n    ],\r\n    // For 'sad' we give UPLIFT songs to cheer up\r\n    songs: {\r\n      bollywood: [\r\n        { title: \"Zinda â€“ Bhaag Milkha Bhaag\", url: \"https://www.youtube.com/watch?v=Ax0G_P2dSBw\" },\r\n        { title: \"Ilahi â€“ YJHD\", url: \"https://www.youtube.com/watch?v=fdubeMFwuGs\" },\r\n        { title: \"Dil Dhadakne Do â€“ ZNMD\", url: \"https://www.youtube.com/watch?v=WuMWwPHTSoY\" },\r\n        { title: \"Zindagi Do Pal Ki â€“ Kites\", url: \"https://www.youtube.com/watch?v=4DbVdym2M90\" },\r\n        { title: \"Love You Zindagi â€“ Dear Zindagi\", url: \"https://www.youtube.com/watch?v=bw7bVpI5VcM\" }\r\n      ],\r\n      english: [\r\n        { title: \"Shake It Off â€“ Taylor Swift\", url: \"https://www.youtube.com/watch?v=nfWlot6h_JM\" },\r\n        { title: \"Good as Hell â€“ Lizzo\", url: \"https://www.youtube.com/watch?v=vuq-VAiW9kA\" },\r\n        { title: \"Stronger â€“ Kelly Clarkson\", url: \"https://www.youtube.com/watch?v=Xn676-fLq7I\" },\r\n        { title: \"Firework â€“ Katy Perry\", url: \"https://www.youtube.com/watch?v=QGJuMBdaqIw\" },\r\n        { title: \"Roar â€“ Katy Perry\", url: \"https://www.youtube.com/watch?v=CevxZvSJLk8\" }\r\n      ]\r\n    }\r\n  },\r\n\r\n  angry: {\r\n    emoji: \"ðŸ˜¡\",\r\n    quotes: [\r\n      \"Take a deep breath, peace starts within.\",\r\n      \"Donâ€™t let anger control you.\",\r\n      \"Relax, recharge, restart.\"\r\n    ],\r\n    songs: {\r\n      bollywood: [\r\n        { title: \"Sadda Haq â€“ Rockstar\", url: \"https://www.youtube.com/watch?v=p9DQINKZxWE\" },\r\n        { title: \"Allah Ke Bande â€“ Kailash Kher\", url: \"https://www.youtube.com/watch?v=KSwd2fYX9vg\" },\r\n        { title: \"Mitwa â€“ Kabhi Alvida Naa Kehna\", url: \"https://www.youtube.com/watch?v=ru_5PA8cwkE\" },\r\n        { title: \"Yun Hi Chala Chal â€“ Swades\", url: \"https://www.youtube.com/watch?v=eEeX2QMlSlo\" },\r\n        { title: \"Dil Se Re â€“ Dil Se\", url: \"https://www.youtube.com/watch?v=U3hZW62-KGA\" }\r\n      ],\r\n      english: [\r\n        { title: \"Numb â€“ Linkin Park\", url: \"https://www.youtube.com/watch?v=kXYiU_JCYtU\" },\r\n        { title: \"Believer â€“ Imagine Dragons\", url: \"https://www.youtube.com/watch?v=7wtfhZwyrcc\" },\r\n        { title: \"Whatever It Takes â€“ Imagine Dragons\", url: \"https://www.youtube.com/watch?v=gOsM-DYAEhY\" },\r\n        { title: \"Faint â€“ Linkin Park\", url: \"https://www.youtube.com/watch?v=LYU-8IFcDPw\" },\r\n        { title: \"Stronger â€“ Kanye West\", url: \"https://www.youtube.com/watch?v=PsO6ZnUZI0g\" }\r\n      ]\r\n    }\r\n  },\r\n\r\n  relaxed: {\r\n    emoji: \"ðŸ˜Œ\",\r\n    quotes: [\r\n      \"Peace begins with a smile.\",\r\n      \"Relax, refresh, recharge.\",\r\n      \"Calm mind, happy soul.\"\r\n    ],\r\n    songs: {\r\n      bollywood: [\r\n        { title: \"Kun Faya Kun â€“ Rockstar\", url: \"https://www.youtube.com/watch?v=0RDI9CMilhk\" },\r\n        { title: \"Phir Se Ud Chala â€“ Rockstar\", url: \"https://www.youtube.com/watch?v=2mWaqsC3U7k\" },\r\n        { title: \"Agar Tum Saath Ho â€“ Tamasha\", url: \"https://www.youtube.com/watch?v=sK7riqg2mr4\" },\r\n        { title: \"Sham â€“ Aisha\", url: \"https://www.youtube.com/watch?v=kl8T6tsOZJk\" },\r\n        { title: \"Iktara â€“ Wake Up Sid\", url: \"https://www.youtube.com/watch?v=akjdj6iHttY\" }\r\n      ],\r\n      english: [\r\n        { title: \"Perfect â€“ Ed Sheeran\", url: \"https://www.youtube.com/watch?v=2Vv-BfVoq4g\" },\r\n        { title: \"All of Me â€“ John Legend\", url: \"https://www.youtube.com/watch?v=450p7goxZqg\" },\r\n        { title: \"Let Her Go â€“ Passenger\", url: \"https://www.youtube.com/watch?v=RBumgq5yVrA\" },\r\n        { title: \"Photograph â€“ Ed Sheeran\", url: \"https://www.youtube.com/watch?v=nSDgHBxUbVQ\" },\r\n        { title: \"Stay With Me â€“ Sam Smith\", url: \"https://www.youtube.com/watch?v=pB-5XG-DbAA\" }\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\nfunction pickRandom(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport default function Dashboard() {\r\n  const [rawInput, setRawInput] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"bollywood\");\r\n  const [activeMood, setActiveMood] = useState(\"\");\r\n  const [quote, setQuote] = useState(\"\");\r\n\r\n  const quickSet = (m) => {\r\n    setRawInput(m);\r\n    handleRecommend(m, language);\r\n  };\r\n\r\n  const handleRecommend = (text = rawInput, lang = language) => {\r\n    const mood = mapInputToMood(text);\r\n    setActiveMood(mood);\r\n    setLanguage(lang);\r\n    setQuote(pickRandom(MOOD_DATA[mood].quotes));\r\n  };\r\n\r\n  const songsToShow = activeMood ? MOOD_DATA[activeMood].songs[language] : [];\r\n  const emoji = activeMood ? MOOD_DATA[activeMood].emoji : \"ðŸŽ§\";\r\n\r\n  return (\r\n    <div className=\"dash-wrap\">\r\n      {/* Optional background music */}\r\n      <audio src=\"YOUR_MUSIC_URL_HERE.mp3\" autoPlay loop />\r\n\r\n      <div className=\"card\">\r\n        <h1 className=\"title\">ðŸŽµ MoodSync â€” Playlist by Mood</h1>\r\n\r\n        {/* Quick mood chips */}\r\n        <div className=\"chips\">\r\n          {[\"happy\", \"sad\", \"angry\", \"relaxed\"].map((m) => (\r\n            <button key={m} className=\"chip\" onClick={() => quickSet(m)}>\r\n              {m}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Input and button */}\r\n        <div className=\"input-row\">\r\n          <input\r\n            value={rawInput}\r\n            onChange={(e) => setRawInput(e.target.value)}\r\n            placeholder=\"Type how you feel (e.g., 'I am sad' or 'happy')\"\r\n          />\r\n          <button onClick={() => handleRecommend()}>Get Playlist</button>\r\n        </div>\r\n\r\n        {/* Language toggle */}\r\n        <div className=\"input-row\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              checked={language === \"bollywood\"}\r\n              onChange={() => handleRecommend(rawInput, \"bollywood\")}\r\n            />\r\n            Bollywood\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              checked={language === \"english\"}\r\n              onChange={() => handleRecommend(rawInput, \"english\")}\r\n            />\r\n            English\r\n          </label>\r\n        </div>\r\n\r\n        {/* Mood result */}\r\n        {activeMood && (\r\n          <div className=\"result\">\r\n            <div className=\"mood-row\">\r\n              <span style={{ fontSize: 28 }}>{emoji}</span>\r\n              <div style={{ marginLeft: 12 }}>\r\n                <div style={{ fontWeight: 700, fontSize: 18, textTransform: \"capitalize\" }}>\r\n                  Mood: {activeMood}\r\n                </div>\r\n                <div style={{ color: \"#555\" }}>{quote}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <ul className=\"song-list\">\r\n              {songsToShow.map((song, i) => (\r\n                <li key={i}>\r\n                  <a href={song.url} target=\"_blank\" rel=\"noreferrer\">\r\n                    {song.title}\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"hint\">\r\n          Tip: type words like <b>happy</b>, <b>sad</b>, <b>angry</b>, <b>relaxed</b> or click the quick chips above.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}