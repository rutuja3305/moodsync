{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jabra\\\\OneDrive\\\\Desktop\\\\moodsync\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n/**\r\n * Map many possible user words to our 4 moods.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction mapInputToMood(text) {\n  const t = (text || \"\").toLowerCase().trim();\n  const buckets = {\n    sad: [\"sad\", \"down\", \"depressed\", \"upset\", \"unhappy\", \"low\", \"cry\", \"alone\"],\n    happy: [\"happy\", \"joy\", \"glad\", \"excited\", \"awesome\", \"great\", \"good\", \"energetic\"],\n    stressed: [\"stressed\", \"anxious\", \"anxiety\", \"tense\", \"overwhelmed\", \"pressure\", \"panic\", \"worried\"],\n    romantic: [\"romantic\", \"love\", \"loving\", \"crush\", \"heart\", \"date\", \"valentine\"]\n  };\n  for (const mood in buckets) {\n    if (buckets[mood].some(word => t.includes(word))) return mood;\n  }\n  // default to stressed â†’ calm music helps most often\n  return \"stressed\";\n}\n\n/**\r\n * Our data: emoji, quotes, and curated song links for each mood & language.\r\n * (Links open in a new tab)\r\n */\n// Mood data with emoji, quotes, and music links\nconst MOOD_DATA = {\n  happy: {\n    emoji: \"ðŸ˜Š\",\n    quotes: [\"Keep smiling, the world is brighter with you.\", \"Happiness is contagiousâ€”spread it around!\", \"Joy is the simplest form of gratitude.\"],\n    songs: {\n      bollywood: [{\n        title: \"Gallan Goodiyan â€“ Dil Dhadakne Do\",\n        url: \"https://www.youtube.com/watch?v=qWcDo8d9zGM\"\n      }, {\n        title: \"London Thumakda â€“ Queen\",\n        url: \"https://www.youtube.com/watch?v=Off8gtZ7yqg\"\n      }, {\n        title: \"Badtameez Dil â€“ YJHD\",\n        url: \"https://www.youtube.com/watch?v=II2EO3Nw4m0\"\n      }, {\n        title: \"Abhi Toh Party Shuru Hui Hai â€“ Khoobsurat\",\n        url: \"https://www.youtube.com/watch?v=uYc8WnlQfZk\"\n      }, {\n        title: \"Kar Gayi Chull â€“ Kapoor & Sons\",\n        url: \"https://www.youtube.com/watch?v=I9GwZx3aTAY\"\n      }],\n      english: [{\n        title: \"Happy â€“ Pharrell Williams\",\n        url: \"https://www.youtube.com/watch?v=ZbZSe6N_BXs\"\n      }, {\n        title: \"Canâ€™t Stop the Feeling â€“ Justin Timberlake\",\n        url: \"https://www.youtube.com/watch?v=ru0K8uYEZWw\"\n      }, {\n        title: \"Uptown Funk â€“ Bruno Mars\",\n        url: \"https://www.youtube.com/watch?v=OPf0YbXqDm0\"\n      }, {\n        title: \"Shake It Off â€“ Taylor Swift\",\n        url: \"https://www.youtube.com/watch?v=nfWlot6h_JM\"\n      }, {\n        title: \"Good Time â€“ Owl City & Carly Rae Jepsen\",\n        url: \"https://www.youtube.com/watch?v=H7HmzwI67ec\"\n      }]\n    }\n  },\n  sad: {\n    emoji: \"ðŸ˜¢\",\n    quotes: [\"Low today, glow tomorrow.\", \"Storms donâ€™t last forever.\", \"One song, one step at a time.\"],\n    // For 'sad' we give UPLIFT songs to cheer up\n    songs: {\n      bollywood: [{\n        title: \"Zinda â€“ Bhaag Milkha Bhaag\",\n        url: \"https://www.youtube.com/watch?v=jFpWv8VK1hA\"\n      }, {\n        title: \"Ilahi â€“ YJHD\",\n        url: \"https://www.youtube.com/watch?v=Zq5nyGOSqRM\"\n      }, {\n        title: \"Dil Dhadakne Do â€“ ZNMD\",\n        url: \"https://www.youtube.com/watch?v=FYH9n37B7Yw\"\n      }, {\n        title: \"Zindagi Do Pal Ki â€“ Kites\",\n        url: \"https://www.youtube.com/watch?v=9h6TN1p9G0k\"\n      }, {\n        title: \"Love You Zindagi â€“ Dear Zindagi\",\n        url: \"https://www.youtube.com/watch?v=5Dk8ZhwY4ZU\"\n      }],\n      english: [{\n        title: \"Shake It Off â€“ Taylor Swift\",\n        url: \"https://www.youtube.com/watch?v=nfWlot6h_JM\"\n      }, {\n        title: \"Good as Hell â€“ Lizzo\",\n        url: \"https://www.youtube.com/watch?v=vuq-VAiW9kA\"\n      }, {\n        title: \"Stronger â€“ Kelly Clarkson\",\n        url: \"https://www.youtube.com/watch?v=Xn676-fLq7I\"\n      }, {\n        title: \"Firework â€“ Katy Perry\",\n        url: \"https://www.youtube.com/watch?v=QGJuMBdaqIw\"\n      }, {\n        title: \"Roar â€“ Katy Perry\",\n        url: \"https://www.youtube.com/watch?v=CevxZvSJLk8\"\n      }]\n    }\n  },\n  angry: {\n    emoji: \"ðŸ˜¡\",\n    quotes: [\"Take a deep breath, peace starts within.\", \"Donâ€™t let anger control you.\", \"Relax, recharge, restart.\"],\n    songs: {\n      bollywood: [{\n        title: \"Sadda Haq â€“ Rockstar\",\n        url: \"https://www.youtube.com/watch?v=1jK9WcZrK2M\"\n      }, {\n        title: \"Allah Ke Bande â€“ Kailash Kher\",\n        url: \"https://www.youtube.com/watch?v=1Jz7gK0us5A\"\n      }, {\n        title: \"Mitwa â€“ Kabhi Alvida Naa Kehna\",\n        url: \"https://www.youtube.com/watch?v=UwzHUQjN9l4\"\n      }, {\n        title: \"Yun Hi Chala Chal â€“ Swades\",\n        url: \"https://www.youtube.com/watch?v=6tM3y8ss7hM\"\n      }, {\n        title: \"Dil Se Re â€“ Dil Se\",\n        url: \"https://www.youtube.com/watch?v=IoQ6be8fS-s\"\n      }],\n      english: [{\n        title: \"Numb â€“ Linkin Park\",\n        url: \"https://www.youtube.com/watch?v=kXYiU_JCYtU\"\n      }, {\n        title: \"Believer â€“ Imagine Dragons\",\n        url: \"https://www.youtube.com/watch?v=7wtfhZwyrcc\"\n      }, {\n        title: \"Whatever It Takes â€“ Imagine Dragons\",\n        url: \"https://www.youtube.com/watch?v=gOsM-DYAEhY\"\n      }, {\n        title: \"Faint â€“ Linkin Park\",\n        url: \"https://www.youtube.com/watch?v=LYU-8IFcDPw\"\n      }, {\n        title: \"Stronger â€“ Kanye West\",\n        url: \"https://www.youtube.com/watch?v=PsO6ZnUZI0g\"\n      }]\n    }\n  },\n  relaxed: {\n    emoji: \"ðŸ˜Œ\",\n    quotes: [\"Peace begins with a smile.\", \"Relax, refresh, recharge.\", \"Calm mind, happy soul.\"],\n    songs: {\n      bollywood: [{\n        title: \"Kun Faya Kun â€“ Rockstar\",\n        url: \"https://www.youtube.com/watch?v=T94PHkuydcw\"\n      }, {\n        title: \"Phir Se Ud Chala â€“ Rockstar\",\n        url: \"https://www.youtube.com/watch?v=KRz4IXmlb4w\"\n      }, {\n        title: \"Agar Tum Saath Ho â€“ Tamasha\",\n        url: \"https://www.youtube.com/watch?v=sK7riqg2mr4\"\n      }, {\n        title: \"Sham â€“ Aisha\",\n        url: \"https://www.youtube.com/watch?v=wO4-Y7NhmhU\"\n      }, {\n        title: \"Iktara â€“ Wake Up Sid\",\n        url: \"https://www.youtube.com/watch?v=TZlGSXZXJDc\"\n      }],\n      english: [{\n        title: \"Perfect â€“ Ed Sheeran\",\n        url: \"https://www.youtube.com/watch?v=2Vv-BfVoq4g\"\n      }, {\n        title: \"All of Me â€“ John Legend\",\n        url: \"https://www.youtube.com/watch?v=450p7goxZqg\"\n      }, {\n        title: \"Let Her Go â€“ Passenger\",\n        url: \"https://www.youtube.com/watch?v=RBumgq5yVrA\"\n      }, {\n        title: \"Photograph â€“ Ed Sheeran\",\n        url: \"https://www.youtube.com/watch?v=nSDgHBxUbVQ\"\n      }, {\n        title: \"Stay With Me â€“ Sam Smith\",\n        url: \"https://www.youtube.com/watch?v=pB-5XG-DbAA\"\n      }]\n    }\n  }\n};\nfunction pickRandom(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\nexport default function Dashboard() {\n  _s();\n  const [rawInput, setRawInput] = useState(\"\");\n  const [language, setLanguage] = useState(\"bollywood\"); // 'bollywood' | 'english'\n  const [activeMood, setActiveMood] = useState(\"\");\n  const [quote, setQuote] = useState(\"\");\n  const quickSet = m => {\n    setRawInput(m);\n    handleRecommend(m, language);\n  };\n  const handleRecommend = (text = rawInput, lang = language) => {\n    const mood = mapInputToMood(text);\n    setActiveMood(mood);\n    setLanguage(lang);\n    setQuote(pickRandom(MOOD_DATA[mood].quotes));\n  };\n  const songsToShow = activeMood ? MOOD_DATA[activeMood].songs[language] : [];\n  const emoji = activeMood ? MOOD_DATA[activeMood].emoji : \"ðŸŽ§\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: 12\n        },\n        children: \"\\uD83C\\uDFB5 MoodSync \\u2014 Playlist by Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.chips,\n        children: [\"sad\", \"happy\", \"stressed\", \"romantic\"].map(m => /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.chip,\n          onClick: () => quickSet(m),\n          children: m\n        }, m, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: rawInput,\n          onChange: e => setRawInput(e.target.value),\n          placeholder: \"Type how you feel (e.g., 'I am sad' or 'happy')\",\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRecommend(),\n          style: styles.goBtn,\n          children: \"Get Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.langRow,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.radio,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: language === \"bollywood\",\n            onChange: () => handleRecommend(rawInput, \"bollywood\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: 6\n            },\n            children: \"Bollywood\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.radio,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: language === \"english\",\n            onChange: () => handleRecommend(rawInput, \"english\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: 6\n            },\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), activeMood && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.result,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.moodRow,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 28\n            },\n            children: emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 700,\n                fontSize: 18,\n                textTransform: \"capitalize\"\n              },\n              children: [\"Mood: \", activeMood]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"#555\"\n              },\n              children: quote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 600,\n              marginBottom: 8\n            },\n            children: [language === \"bollywood\" ? \"Bollywood\" : \"English\", \" picks:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              paddingLeft: 18,\n              lineHeight: 1.9\n            },\n            children: songsToShow.map((song, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: song.url,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.footerNote,\n      children: [\"Tip: type words like \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"sad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 30\n      }, this), \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"happy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 42\n      }, this), \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"stressed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 56\n      }, this), \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"romantic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 73\n      }, this), \" or just click the quick chips above.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"sNEEoKpKyQND2XBX6OrtRFBR0tQ=\");\n_c = Dashboard;\nconst styles = {\n  page: {\n    minHeight: \"100vh\",\n    background: \"linear-gradient(135deg, #f6f9ff, #fef6ff)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 16\n  },\n  card: {\n    width: \"100%\",\n    maxWidth: 680,\n    background: \"#fff\",\n    borderRadius: 16,\n    boxShadow: \"0 10px 30px rgba(0,0,0,0.08)\",\n    padding: 20\n  },\n  chips: {\n    display: \"flex\",\n    gap: 8,\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    padding: \"6px 12px\",\n    borderRadius: 999,\n    border: \"1px solid #e5e7eb\",\n    background: \"#f8fafc\",\n    cursor: \"pointer\"\n  },\n  input: {\n    width: \"70%\",\n    minWidth: 260,\n    padding: \"10px 12px\",\n    borderRadius: 10,\n    border: \"1px solid #e5e7eb\",\n    outline: \"none\"\n  },\n  goBtn: {\n    marginLeft: 8,\n    padding: \"10px 14px\",\n    borderRadius: 10,\n    border: \"none\",\n    background: \"#2563eb\",\n    color: \"#fff\",\n    cursor: \"pointer\"\n  },\n  langRow: {\n    marginTop: 12,\n    display: \"flex\",\n    gap: 16,\n    alignItems: \"center\"\n  },\n  radio: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  },\n  result: {\n    marginTop: 16,\n    borderTop: \"1px dashed #e5e7eb\",\n    paddingTop: 14\n  },\n  moodRow: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  footerNote: {\n    marginTop: 12,\n    color: \"#6b7280\",\n    textAlign: \"center\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","mapInputToMood","text","t","toLowerCase","trim","buckets","sad","happy","stressed","romantic","mood","some","word","includes","MOOD_DATA","emoji","quotes","songs","bollywood","title","url","english","angry","relaxed","pickRandom","arr","Math","floor","random","length","Dashboard","_s","rawInput","setRawInput","language","setLanguage","activeMood","setActiveMood","quote","setQuote","quickSet","m","handleRecommend","lang","songsToShow","style","styles","page","children","card","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","chips","map","chip","onClick","marginTop","value","onChange","e","target","placeholder","input","goBtn","langRow","radio","type","checked","marginLeft","result","moodRow","fontSize","fontWeight","textTransform","color","paddingLeft","lineHeight","song","i","href","rel","footerNote","_c","minHeight","background","display","alignItems","justifyContent","padding","width","maxWidth","borderRadius","boxShadow","gap","flexWrap","border","cursor","minWidth","outline","borderTop","paddingTop","textAlign","$RefreshReg$"],"sources":["C:/Users/jabra/OneDrive/Desktop/moodsync/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n/**\r\n * Map many possible user words to our 4 moods.\r\n */\r\nfunction mapInputToMood(text) {\r\n  const t = (text || \"\").toLowerCase().trim();\r\n\r\n  const buckets = {\r\n    sad: [\"sad\", \"down\", \"depressed\", \"upset\", \"unhappy\", \"low\", \"cry\", \"alone\"],\r\n    happy: [\"happy\", \"joy\", \"glad\", \"excited\", \"awesome\", \"great\", \"good\", \"energetic\"],\r\n    stressed: [\"stressed\", \"anxious\", \"anxiety\", \"tense\", \"overwhelmed\", \"pressure\", \"panic\", \"worried\"],\r\n    romantic: [\"romantic\", \"love\", \"loving\", \"crush\", \"heart\", \"date\", \"valentine\"]\r\n  };\r\n\r\n  for (const mood in buckets) {\r\n    if (buckets[mood].some(word => t.includes(word))) return mood;\r\n  }\r\n  // default to stressed â†’ calm music helps most often\r\n  return \"stressed\";\r\n}\r\n\r\n/**\r\n * Our data: emoji, quotes, and curated song links for each mood & language.\r\n * (Links open in a new tab)\r\n */\r\n// Mood data with emoji, quotes, and music links\r\nconst MOOD_DATA = {\r\n  happy: {\r\n    emoji: \"ðŸ˜Š\",\r\n    quotes: [\r\n      \"Keep smiling, the world is brighter with you.\",\r\n      \"Happiness is contagiousâ€”spread it around!\",\r\n      \"Joy is the simplest form of gratitude.\"\r\n    ],\r\n    songs: {\r\n      bollywood: [\r\n        { title: \"Gallan Goodiyan â€“ Dil Dhadakne Do\", url: \"https://www.youtube.com/watch?v=qWcDo8d9zGM\" },\r\n        { title: \"London Thumakda â€“ Queen\", url: \"https://www.youtube.com/watch?v=Off8gtZ7yqg\" },\r\n        { title: \"Badtameez Dil â€“ YJHD\", url: \"https://www.youtube.com/watch?v=II2EO3Nw4m0\" },\r\n        { title: \"Abhi Toh Party Shuru Hui Hai â€“ Khoobsurat\", url: \"https://www.youtube.com/watch?v=uYc8WnlQfZk\" },\r\n        { title: \"Kar Gayi Chull â€“ Kapoor & Sons\", url: \"https://www.youtube.com/watch?v=I9GwZx3aTAY\" }\r\n      ],\r\n      english: [\r\n        { title: \"Happy â€“ Pharrell Williams\", url: \"https://www.youtube.com/watch?v=ZbZSe6N_BXs\" },\r\n        { title: \"Canâ€™t Stop the Feeling â€“ Justin Timberlake\", url: \"https://www.youtube.com/watch?v=ru0K8uYEZWw\" },\r\n        { title: \"Uptown Funk â€“ Bruno Mars\", url: \"https://www.youtube.com/watch?v=OPf0YbXqDm0\" },\r\n        { title: \"Shake It Off â€“ Taylor Swift\", url: \"https://www.youtube.com/watch?v=nfWlot6h_JM\" },\r\n        { title: \"Good Time â€“ Owl City & Carly Rae Jepsen\", url: \"https://www.youtube.com/watch?v=H7HmzwI67ec\" }\r\n      ]\r\n    }\r\n  },\r\n\r\n  sad: {\r\n    emoji: \"ðŸ˜¢\",\r\n    quotes: [\r\n      \"Low today, glow tomorrow.\",\r\n      \"Storms donâ€™t last forever.\",\r\n      \"One song, one step at a time.\"\r\n    ],\r\n    // For 'sad' we give UPLIFT songs to cheer up\r\n    songs: {\r\n      bollywood: [\r\n        { title: \"Zinda â€“ Bhaag Milkha Bhaag\", url: \"https://www.youtube.com/watch?v=jFpWv8VK1hA\" },\r\n        { title: \"Ilahi â€“ YJHD\", url: \"https://www.youtube.com/watch?v=Zq5nyGOSqRM\" },\r\n        { title: \"Dil Dhadakne Do â€“ ZNMD\", url: \"https://www.youtube.com/watch?v=FYH9n37B7Yw\" },\r\n        { title: \"Zindagi Do Pal Ki â€“ Kites\", url: \"https://www.youtube.com/watch?v=9h6TN1p9G0k\" },\r\n        { title: \"Love You Zindagi â€“ Dear Zindagi\", url: \"https://www.youtube.com/watch?v=5Dk8ZhwY4ZU\" }\r\n      ],\r\n      english: [\r\n        { title: \"Shake It Off â€“ Taylor Swift\", url: \"https://www.youtube.com/watch?v=nfWlot6h_JM\" },\r\n        { title: \"Good as Hell â€“ Lizzo\", url: \"https://www.youtube.com/watch?v=vuq-VAiW9kA\" },\r\n        { title: \"Stronger â€“ Kelly Clarkson\", url: \"https://www.youtube.com/watch?v=Xn676-fLq7I\" },\r\n        { title: \"Firework â€“ Katy Perry\", url: \"https://www.youtube.com/watch?v=QGJuMBdaqIw\" },\r\n        { title: \"Roar â€“ Katy Perry\", url: \"https://www.youtube.com/watch?v=CevxZvSJLk8\" }\r\n      ]\r\n    }\r\n  },\r\n\r\n  angry: {\r\n    emoji: \"ðŸ˜¡\",\r\n    quotes: [\r\n      \"Take a deep breath, peace starts within.\",\r\n      \"Donâ€™t let anger control you.\",\r\n      \"Relax, recharge, restart.\"\r\n    ],\r\n    songs: {\r\n      bollywood: [\r\n        { title: \"Sadda Haq â€“ Rockstar\", url: \"https://www.youtube.com/watch?v=1jK9WcZrK2M\" },\r\n        { title: \"Allah Ke Bande â€“ Kailash Kher\", url: \"https://www.youtube.com/watch?v=1Jz7gK0us5A\" },\r\n        { title: \"Mitwa â€“ Kabhi Alvida Naa Kehna\", url: \"https://www.youtube.com/watch?v=UwzHUQjN9l4\" },\r\n        { title: \"Yun Hi Chala Chal â€“ Swades\", url: \"https://www.youtube.com/watch?v=6tM3y8ss7hM\" },\r\n        { title: \"Dil Se Re â€“ Dil Se\", url: \"https://www.youtube.com/watch?v=IoQ6be8fS-s\" }\r\n      ],\r\n      english: [\r\n        { title: \"Numb â€“ Linkin Park\", url: \"https://www.youtube.com/watch?v=kXYiU_JCYtU\" },\r\n        { title: \"Believer â€“ Imagine Dragons\", url: \"https://www.youtube.com/watch?v=7wtfhZwyrcc\" },\r\n        { title: \"Whatever It Takes â€“ Imagine Dragons\", url: \"https://www.youtube.com/watch?v=gOsM-DYAEhY\" },\r\n        { title: \"Faint â€“ Linkin Park\", url: \"https://www.youtube.com/watch?v=LYU-8IFcDPw\" },\r\n        { title: \"Stronger â€“ Kanye West\", url: \"https://www.youtube.com/watch?v=PsO6ZnUZI0g\" }\r\n      ]\r\n    }\r\n  },\r\n\r\n  relaxed: {\r\n    emoji: \"ðŸ˜Œ\",\r\n    quotes: [\r\n      \"Peace begins with a smile.\",\r\n      \"Relax, refresh, recharge.\",\r\n      \"Calm mind, happy soul.\"\r\n    ],\r\n    songs: {\r\n      bollywood: [\r\n        { title: \"Kun Faya Kun â€“ Rockstar\", url: \"https://www.youtube.com/watch?v=T94PHkuydcw\" },\r\n        { title: \"Phir Se Ud Chala â€“ Rockstar\", url: \"https://www.youtube.com/watch?v=KRz4IXmlb4w\" },\r\n        { title: \"Agar Tum Saath Ho â€“ Tamasha\", url: \"https://www.youtube.com/watch?v=sK7riqg2mr4\" },\r\n        { title: \"Sham â€“ Aisha\", url: \"https://www.youtube.com/watch?v=wO4-Y7NhmhU\" },\r\n        { title: \"Iktara â€“ Wake Up Sid\", url: \"https://www.youtube.com/watch?v=TZlGSXZXJDc\" }\r\n      ],\r\n      english: [\r\n        { title: \"Perfect â€“ Ed Sheeran\", url: \"https://www.youtube.com/watch?v=2Vv-BfVoq4g\" },\r\n        { title: \"All of Me â€“ John Legend\", url: \"https://www.youtube.com/watch?v=450p7goxZqg\" },\r\n        { title: \"Let Her Go â€“ Passenger\", url: \"https://www.youtube.com/watch?v=RBumgq5yVrA\" },\r\n        { title: \"Photograph â€“ Ed Sheeran\", url: \"https://www.youtube.com/watch?v=nSDgHBxUbVQ\" },\r\n        { title: \"Stay With Me â€“ Sam Smith\", url: \"https://www.youtube.com/watch?v=pB-5XG-DbAA\" }\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\n\r\nfunction pickRandom(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport default function Dashboard() {\r\n  const [rawInput, setRawInput] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"bollywood\"); // 'bollywood' | 'english'\r\n  const [activeMood, setActiveMood] = useState(\"\");\r\n  const [quote, setQuote] = useState(\"\");\r\n\r\n  const quickSet = (m) => {\r\n    setRawInput(m);\r\n    handleRecommend(m, language);\r\n  };\r\n\r\n  const handleRecommend = (text = rawInput, lang = language) => {\r\n    const mood = mapInputToMood(text);\r\n    setActiveMood(mood);\r\n    setLanguage(lang);\r\n    setQuote(pickRandom(MOOD_DATA[mood].quotes));\r\n  };\r\n\r\n  const songsToShow =\r\n    activeMood ? MOOD_DATA[activeMood].songs[language] : [];\r\n\r\n  const emoji =\r\n    activeMood ? MOOD_DATA[activeMood].emoji : \"ðŸŽ§\";\r\n\r\n  return (\r\n    <div style={styles.page}>\r\n      <div style={styles.card}>\r\n        <h1 style={{ marginBottom: 12 }}>ðŸŽµ MoodSync â€” Playlist by Mood</h1>\r\n\r\n        {/* Quick chips */}\r\n        <div style={styles.chips}>\r\n          {[\"sad\", \"happy\", \"stressed\", \"romantic\"].map(m => (\r\n            <button key={m} style={styles.chip} onClick={() => quickSet(m)}>\r\n              {m}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Input */}\r\n        <div style={{ marginTop: 12 }}>\r\n          <input\r\n            value={rawInput}\r\n            onChange={(e) => setRawInput(e.target.value)}\r\n            placeholder=\"Type how you feel (e.g., 'I am sad' or 'happy')\"\r\n            style={styles.input}\r\n          />\r\n          <button onClick={() => handleRecommend()} style={styles.goBtn}>\r\n            Get Playlist\r\n          </button>\r\n        </div>\r\n\r\n        {/* Language toggle */}\r\n        <div style={styles.langRow}>\r\n          <label style={styles.radio}>\r\n            <input\r\n              type=\"radio\"\r\n              checked={language === \"bollywood\"}\r\n              onChange={() => handleRecommend(rawInput, \"bollywood\")}\r\n            />\r\n            <span style={{ marginLeft: 6 }}>Bollywood</span>\r\n          </label>\r\n          <label style={styles.radio}>\r\n            <input\r\n              type=\"radio\"\r\n              checked={language === \"english\"}\r\n              onChange={() => handleRecommend(rawInput, \"english\")}\r\n            />\r\n            <span style={{ marginLeft: 6 }}>English</span>\r\n          </label>\r\n        </div>\r\n\r\n        {/* Result */}\r\n        {activeMood && (\r\n          <div style={styles.result}>\r\n            <div style={styles.moodRow}>\r\n              <span style={{ fontSize: 28 }}>{emoji}</span>\r\n              <div style={{ marginLeft: 12 }}>\r\n                <div style={{ fontWeight: 700, fontSize: 18, textTransform: \"capitalize\" }}>\r\n                  Mood: {activeMood}\r\n                </div>\r\n                <div style={{ color: \"#555\" }}>{quote}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: 12 }}>\r\n              <div style={{ fontWeight: 600, marginBottom: 8 }}>\r\n                {language === \"bollywood\" ? \"Bollywood\" : \"English\"} picks:\r\n              </div>\r\n              <ul style={{ paddingLeft: 18, lineHeight: 1.9 }}>\r\n                {songsToShow.map((song, i) => (\r\n                  <li key={i}>\r\n                    <a href={song.url} target=\"_blank\" rel=\"noreferrer\">\r\n                      {song.title}\r\n                    </a>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={styles.footerNote}>\r\n        Tip: type words like <b>sad</b>, <b>happy</b>, <b>stressed</b>, <b>romantic</b> or\r\n        just click the quick chips above.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  page: {\r\n    minHeight: \"100vh\",\r\n    background: \"linear-gradient(135deg, #f6f9ff, #fef6ff)\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 16\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    maxWidth: 680,\r\n    background: \"#fff\",\r\n    borderRadius: 16,\r\n    boxShadow: \"0 10px 30px rgba(0,0,0,0.08)\",\r\n    padding: 20\r\n  },\r\n  chips: { display: \"flex\", gap: 8, flexWrap: \"wrap\" },\r\n  chip: {\r\n    padding: \"6px 12px\",\r\n    borderRadius: 999,\r\n    border: \"1px solid #e5e7eb\",\r\n    background: \"#f8fafc\",\r\n    cursor: \"pointer\"\r\n  },\r\n  input: {\r\n    width: \"70%\",\r\n    minWidth: 260,\r\n    padding: \"10px 12px\",\r\n    borderRadius: 10,\r\n    border: \"1px solid #e5e7eb\",\r\n    outline: \"none\"\r\n  },\r\n  goBtn: {\r\n    marginLeft: 8,\r\n    padding: \"10px 14px\",\r\n    borderRadius: 10,\r\n    border: \"none\",\r\n    background: \"#2563eb\",\r\n    color: \"#fff\",\r\n    cursor: \"pointer\"\r\n  },\r\n  langRow: {\r\n    marginTop: 12,\r\n    display: \"flex\",\r\n    gap: 16,\r\n    alignItems: \"center\"\r\n  },\r\n  radio: { display: \"flex\", alignItems: \"center\", cursor: \"pointer\" },\r\n  result: {\r\n    marginTop: 16,\r\n    borderTop: \"1px dashed #e5e7eb\",\r\n    paddingTop: 14\r\n  },\r\n  moodRow: { display: \"flex\", alignItems: \"center\" },\r\n  footerNote: { marginTop: 12, color: \"#6b7280\", textAlign: \"center\" }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}